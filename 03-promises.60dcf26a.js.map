{"mappings":"iiBAEA,IAAAA,EAAAC,EAAA,SAoBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEhB,IAAIC,SAAQ,SAACC,EAASC,GAC1CC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAhB,GAASiB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAhB,GAASiB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IApC1DS,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAuBC,GACrBA,EAAEC,iBAOF,IANA,IAAgCC,EAAAF,EAAEG,cAA1Bf,EAAwBc,EAAxBd,MAAOgB,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OAEjBC,EAAcC,OAAOnB,EAAMoB,OACzBC,EAAaF,OAAOH,EAAKI,OACzBE,EAAeH,OAAOF,EAAOG,OAE1BrB,EAAW,EAAGA,GAAYuB,EAAcvB,GAAY,EAC3DV,EAAcU,EAAUmB,GACxBA,GAAeG,C","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз, сколько ввели в поле amount. При каждом вызове передай ей номер создаваемого промиса (position) и задержку учитывая введенную пользователем первую задержку (delay) и шаг (step).\n\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget;\n\n  let delayNumber = Number(delay.value);\n  const stepNumber = Number(step.value);\n  const amountNumber = Number(amount.value);\n\n  for (let position = 1; position <= amountNumber; position += 1) {\n    createPromise(position, delayNumber);\n    delayNumber += stepNumber;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const createPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  createPromise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","document","querySelector","addEventListener","e","preventDefault","_currentTarget","currentTarget","step","amount","delayNumber","Number","value","stepNumber","amountNumber"],"version":3,"file":"03-promises.60dcf26a.js.map"}