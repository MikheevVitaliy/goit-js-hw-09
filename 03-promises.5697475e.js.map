{"mappings":"qhBAEA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEhB,IAAIC,SAAQ,CAACC,EAASC,KAC1CC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAf,GAASgB,OAAOC,QAAQ,uBAAqBL,QAAiBC,MAAU,IAEzEK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAf,GAASgB,OAAOG,QAAQ,sBAAoBP,QAAeC,MAAU,G,CArC5DO,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAuBC,GACrBA,EAAEC,iBACF,MAAMX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,cAElC,IAAIC,EAAcC,OAAOhB,EAAMiB,OAC/B,MAAMC,EAAaF,OAAOJ,EAAKK,OACzBE,EAAeH,OAAOH,EAAOI,OAEnC,IAAK,IAAIlB,EAAW,EAAGA,GAAYoB,EAAcpB,GAAY,EAC3DV,EAAcU,EAAUgB,GACxBA,GAAeG,EAEjBR,EAAEU,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, который при сабмите формы вызывает функцию createPromise(position, delay) столько раз, сколько ввели в поле amount. При каждом вызове передай ей номер создаваемого промиса (position) и задержку учитывая введенную пользователем первую задержку (delay) и шаг (step).\n\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget;\n\n  let delayNumber = Number(delay.value);\n  const stepNumber = Number(step.value);\n  const amountNumber = Number(amount.value);\n\n  for (let position = 1; position <= amountNumber; position += 1) {\n    createPromise(position, delayNumber);\n    delayNumber += stepNumber;\n  }\n  e.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const createPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  createPromise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","document","querySelector","addEventListener","e","preventDefault","step","amount","currentTarget","delayNumber","Number","value","stepNumber","amountNumber","target","reset"],"version":3,"file":"03-promises.5697475e.js.map"}